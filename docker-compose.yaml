services:
  app:
    build: .
    image: spanola:latest
    container_name: spanola
    restart: unless-stopped
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    networks:
      - spanola-network
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_started
      database:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-proxy:
    image: nginx:stable-perl
    container_name: spanola-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./web-proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - spanola-network

  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: spanola-rabbitmq
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    networks:
      - spanola-network

  database:
    image: postgres:latest
    container_name: spanola-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: spanola
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./database/data:/var/lib/postgresql/data
    networks:
      - spanola-network

networks:
  spanola-network:
    name: spanola-network
    driver: bridge
