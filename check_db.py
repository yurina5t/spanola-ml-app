import os
from sqlmodel import SQLModel
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

from app.database.config import get_settings

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
    load_dotenv()
    settings = get_settings()

    urls_to_try = [
        settings.DATABASE_URL_psycopg,
        "postgresql://postgres:postgres@localhost:5432/spanola",
        "postgresql://postgres:postgres@database:5432/spanola"
    ]

    for i, url in enumerate(urls_to_try, 1):
        print(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ {i}: {url}")
        try:
            engine = create_engine(url)
            with engine.connect() as conn:
                version = conn.execute(text("SELECT version()")).scalar()
                print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! PostgreSQL –≤–µ—Ä—Å–∏—è: {version}")
                return url, engine
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            continue

    print("üíÄ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∏ –∫ –æ–¥–Ω–æ–π –ë–î")
    return None, None

def test_create_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü"""
    _, engine = check_database_connection()
    if not engine:
        return False

    try:
        from app.models import theme, user, wallet, transaction_log, task_log, prediction_log  # –≤–∞–∂–Ω–æ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π
        print("\nüõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        SQLModel.metadata.create_all(engine)

        with engine.connect() as conn:
            result = conn.execute(text("""
                SELECT table_name FROM information_schema.tables 
                WHERE table_schema = 'public'
            """))
            tables = [row[0] for row in result.fetchall()]

        print(f"üì¶ –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: {tables}")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        return False

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n" + "=" * 50)
    if test_create_tables():
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ë–î –∑–∞–ø—É—â–µ–Ω–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω—ã –≤–µ—Ä–Ω–æ.")
