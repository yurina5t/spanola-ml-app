from fastapi import FastAPI
from models.user import User
from models.theme import Theme
from models.models import GrammarModel
from models.request import TaskRequest
from models.logs import TransactionHistory, PredictionHistory

app = FastAPI()

@app.get("/health")
def health():
    return {"status": "ok"}


def main():
    try:
        user = User(id=1, email="nuevo@correo.es", _password="superclave123")
        predictions = PredictionHistory()
        transactions = TransactionHistory()

        print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {user.email}, –±–∞–ª–∞–Ω—Å: {user.wallet.balance} –±–∞–ª–ª–æ–≤")

        themes = [
            Theme(name="–≥–ª–∞–≥–æ–ª ser", level="A1", base_comic="comic_ser_base.jpg", bonus_comics=["comic_ser_bonus1.jpg"]),
            Theme(name="–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ", level="A1", base_comic="comic_adj_base.jpg")
        ]

        model = GrammarModel()
        recommended = model.recommend_theme(user, themes, predictions)

        base_task = TaskRequest(
            user=user,
            model=model,
            theme=recommended,
            wallet=user.wallet,
            transactions=transactions,
            is_bonus_comic=False
        )
        base_task.execute()

        bonus_cost = 2.0
        print(f"\nüéÅ –î–æ—Å—Ç—É–ø–µ–Ω –±–æ–Ω—É—Å–Ω—ã–π –∫–æ–º–∏–∫—Å –Ω–∞ —ç—Ç—É —Ç–µ–º—É! –°—Ç–æ–∏–º–æ—Å—Ç—å: {bonus_cost} –±–∞–ª–ª–∞")
        bonus_task = TaskRequest(
            user=user,
            model=model,
            theme=recommended,
            wallet=user.wallet,
            transactions=transactions,
            is_bonus_comic=True,
            bonus_cost=bonus_cost
        )
        bonus_task.execute()

        print(f"üíé –û—Å—Ç–∞—Ç–æ–∫ –±–∞–ª–∞–Ω—Å–∞: {user.wallet.balance} –±–∞–ª–ª–æ–≤")

        print("\nüß† –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:")
        for rec in predictions.get_user_history(user.id):
            print(f"  ‚Üí {rec.model_name} —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª: {rec.theme_name} ({rec.difficulty}) –≤ {rec.recommended_at}")

        print("\nüí∞ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:")
        for t in transactions.get_user_history(user.id):
            print(f"  ‚Üí {t.operation} {t.amount} | –ü—Ä–∏—á–∏–Ω–∞: {t.reason} | –í—Ä–µ–º—è: {t.timestamp}")

    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
