from database.config import get_settings
from database.database import init_db, get_database_engine
from sqlmodel import Session

from models.theme import Theme
from models.user import User
from services.crud.user import create_user, get_all_users
from services.crud.theme import create_theme, get_all_themes
from services.crud.wallet import create_wallet_for_user
from services.admin import top_up_user, get_transaction_history_for_user
from services.generation.task_request import TaskRequest
from services.generation.grammar import GrammarModel


if __name__ == "__main__":
    # 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = get_settings()
    print(f"{settings.APP_NAME} (v{settings.API_VERSION})")
    print(f"Debug: {settings.DEBUG}")
    print(f"DB: {settings.DB_USER}@{settings.DB_HOST}/{settings.DB_NAME}")

    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db(drop_all=True)
    print("‚úÖ –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    # 3. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
    engine = get_database_engine()
    with Session(engine) as session:
        # 4. –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user = create_user("student@correo.es", "superclave123", session)
        create_wallet_for_user(user.id, session)
        admin = create_user("admin@correo.es", "adminadmin", session)
        admin.is_admin = True
        create_wallet_for_user(admin.id, session)
        session.commit()
        print(f"üë§ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
        print(f"üëë –ê–¥–º–∏–Ω: {admin.email}")

        # 5. –ü–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
        top_up_user(user, amount=5.0, session=session)
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {user.wallet.balance}")

        # 6. –°–æ–∑–¥–∞—ë–º —Ç–µ–º—ã
        theme1 = Theme(name="–≥–ª–∞–≥–æ–ª ser", level="A1", base_comic="comic_ser_base.jpg", bonus_comics=["comic_ser_bonus1.jpg"])
        theme2 = Theme(name="–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ", level="A1", base_comic="comic_adj_base.jpg")
        create_theme(theme1, session)
        create_theme(theme2, session)

        themes = get_all_themes(session)
        print("üìö –¢–µ–º—ã:")
        for t in themes:
            print(f" - {t.name} ({t.level})")

        # 7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞–Ω–∏—è
        model = GrammarModel()
        recommended = model.recommend_theme(user, themes, session)

        print(f"\nüß† –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ç–µ–º–∞: {recommended.name}")

        task = TaskRequest(
            user=user,
            model=model,
            theme=recommended,
            session=session,
            is_bonus_comic=False
        )
        log = task.execute()

        print(f"\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ: {log.task_description}")
        print(f"üßæ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {log.result.explanation}")
        print(f"üíµ –û—Å—Ç–∞—Ç–æ–∫ –±–∞–ª–∞–Ω—Å–∞: {user.wallet.balance}")

        # 7.1 –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–≥–æ –∫–æ–º–∏–∫—Å–∞ –∏ —Å–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–ª–æ–≤
        if recommended.bonus_comics:
            print("\nüéÅ –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –±–æ–Ω—É—Å–Ω—ã–π –∫–æ–º–∏–∫—Å!")

            try:
                from services.crud.wallet import deduct_from_wallet
                deduct_from_wallet(user.id, amount=2.0, session=session)
                session.refresh(user.wallet)
                print(f"üí∏ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è –∑–∞ –±–æ–Ω—É—Å: {user.wallet.balance}")
            except ValueError as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å –∑–∞ –±–æ–Ω—É—Å: {e}")
        else:
            print("\n‚ö†Ô∏è –î–ª—è —ç—Ç–æ–π —Ç–µ–º—ã –±–æ–Ω—É—Å–Ω—ã–µ –∫–æ–º–∏–∫—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

        # 8. –ü–µ—á–∞—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        print("\nüìú –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:")
        history = get_transaction_history_for_user(user.id, session)
        for tx in history:
            print(f"{tx.timestamp}: {tx.operation} {tx.amount} ‚Äî {tx.reason}")
