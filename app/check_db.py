from sqlmodel import SQLModel
from sqlalchemy import create_engine, text

from database.config import get_settings

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
    settings = get_settings()

    url = settings.DATABASE_URL,
    print(f"üîó –ü—Ä–æ–±—É—é –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {url}")
    try:
        engine = create_engine(url)
        with engine.connect() as conn:
            version = conn.execute(text("SELECT version()")).scalar()
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! PostgreSQL –≤–µ—Ä—Å–∏—è: {version}")
            return url, engine
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")            
        return None, None

def test_create_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü"""
    _, engine = check_database_connection()
    if not engine:
        return False
    try:
        from models import theme, user, wallet, transaction_log, task_log, prediction_log
        print("\nüõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        SQLModel.metadata.create_all(engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        return False

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n" + "=" * 50)
    if test_create_tables():
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ë–î –∑–∞–ø—É—â–µ–Ω–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω—ã –≤–µ—Ä–Ω–æ.")
